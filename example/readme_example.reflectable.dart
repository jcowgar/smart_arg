// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'package:smart_arg/src/help_argument.dart' as prefix4;
import 'package:smart_arg/src/integer_argument.dart' as prefix3;
import 'package:smart_arg/src/parser.dart' as prefix1;
import 'package:smart_arg/src/string_argument.dart' as prefix2;
import 'readme_example.dart' as prefix0;

// ignore_for_file: unnecessary_const

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_builder_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r"Args",
            r".Args",
            7,
            0,
            const prefix0.Reflector(),
            const <int>[0, 1, 2, 3, 12],
            const <int>[
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11
            ],
            const <int>[],
            -1,
            {},
            {},
            {r"": (b) => () => b ? prefix0.Args() : null},
            -1,
            -1,
            const <int>[-1],
            const <Object>[
              prefix0.reflector,
              const prefix1.Parser(description: 'Hello World application')
            ],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r"name", 32773, 0, const prefix0.Reflector(), -1,
            -1, -1, null, const <Object>[
          const prefix2.StringArgument(help: 'Name of person to say hello to')
        ]),
        r.VariableMirrorImpl(r"greeting", 32773, 0, const prefix0.Reflector(),
            -1, -1, -1, null, const <Object>[
          const prefix2.StringArgument(
              help: 'Greeting text to use',
              mustBeOneOf: const ['Hello', 'Goodbye'])
        ]),
        r.VariableMirrorImpl(r"count", 32773, 0, const prefix0.Reflector(), -1,
            -1, -1, null, const <Object>[
          const prefix3.IntegerArgument(
              help: 'Number of times to greet the person',
              isRequired: true,
              minimum: 1,
              maximum: 100)
        ]),
        r.VariableMirrorImpl(r"help", 32773, 0, const prefix0.Reflector(), -1,
            -1, -1, null, const <Object>[const prefix4.HelpArgument()]),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, -1, -1, 4),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 0, -1, -1, 5),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, -1, -1, 6),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 1, -1, -1, 7),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 2, -1, -1, 8),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 2, -1, -1, 9),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 3, -1, -1, 10),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 3, -1, -1, 11),
        r.MethodMirrorImpl(r"", 64, 0, -1, -1, -1, null, const <int>[],
            const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"==", 131074, null, -1, -1, -1, null,
            const <int>[4], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"toString", 131074, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"noSuchMethod", 65538, null, null, -1, -1, null,
            const <int>[5], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"hashCode", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"runtimeType", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"parse", 262146, null, null, -1, -1, null,
            const <int>[6], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"usage", 131074, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r"extras", 4325379, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r"_name", 32870, 5, const prefix0.Reflector(), -1,
            -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r"_greeting", 32870, 7, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r"_count", 32870, 9, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r"_help", 32870, 11, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r"other", 16390, 13, const prefix0.Reflector(),
            null, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r"invocation", 32774, 15,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r"arguments", 2129926, 18,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null)
      ],
      <Type>[prefix0.Args],
      1,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"parse": (dynamic instance) => instance.parse,
        r"usage": (dynamic instance) => instance.usage,
        r"extras": (dynamic instance) => instance.extras,
        r"name": (dynamic instance) => instance.name,
        r"greeting": (dynamic instance) => instance.greeting,
        r"count": (dynamic instance) => instance.count,
        r"help": (dynamic instance) => instance.help
      },
      {
        r"name=": (dynamic instance, value) => instance.name = value,
        r"greeting=": (dynamic instance, value) => instance.greeting = value,
        r"count=": (dynamic instance, value) => instance.count = value,
        r"help=": (dynamic instance, value) => instance.help = value
      },
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
